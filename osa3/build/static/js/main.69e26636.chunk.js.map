{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","obj","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","concat","Person","person","handleRemove","name","number","onClick","Filter","filter","onChange","value","Notification","message","className","ErrorNotification","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","filteredPersons","toLowerCase","includes","event","target","type","preventDefault","found","find","newPerson","undefined","returnedPerson","setTimeout","window","confirm","map","catch","error","handleRemoveOf","ReactDOM","render","notes","document","getElementById"],"mappings":"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","file":"static/js/main.69e26636.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\n//const baseUrl = 'https://glacial-bastion-14975.herokuapp.com/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(baseUrl.concat(\"/\" + id))\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst obj = {\r\n  getAll: getAll, \r\n  create: create, \r\n  update: update,\r\n  remove: remove \r\n}\r\n\r\nexport default obj","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\nconst handleAdd = (event) => {\n  event.preventDefault() //estää oletusarvoisen toiminnan, mm. sivun uudelleenlatautumisen\n  const found = persons.find(person => person.name === newName)\n\n  const newPerson = {\n    name: newName,\n    number: newNumber\n  }\n\n  if(found === undefined) {\n    personService\n      .create(newPerson).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setMessage(`${newName} has been added to phonebook`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)  \n        setNewName('')\n        setNewNumber('')\n      })\n    \n  } else {\n    if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      personService\n        .update(found.id, newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== found.id ? person : returnedPerson))\n            setMessage(`${newName}'s number has been modified`)\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000) \n          })\n          .catch(error => {\n            setErrorMessage(`Information of ${newName} has already been removed from server`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000) \n          })\n                  \n      setNewName('')\n      setNewNumber('')\n    }\n  }\n}\n\nconst handleNameChange = (event) => {\n  setNewName(event.target.value)\n}\nconst handleNumberChange = (event) => {\n  setNewNumber(event.target.value)\n}\nconst handleFilterChange = (event) => {\n  setNewFilter(event.target.value)\n}\n\n\nconst handleRemoveOf = (id) => {\n  const name = persons.find(person => person.id === id).name\n  if(window.confirm(`Do you really want to remove ${name}`)){\n    personService\n    .remove(id)\n      .then(returnedPerson => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n      setMessage(`'${name}' has been removed from the phonebook`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)   \n  }\n}\n\nconst filteredPersons = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <ErrorNotification message={errorMessage} />\n      <Filter filter={newFilter} onChange={handleFilterChange}/>\n\n      <h2>add a new</h2>\n\n      <form>\n        <div>name: <input value={newName} onChange={handleNameChange}/></div>\n        <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\n        <div>\n          <button type=\"submit\" onClick={handleAdd}>add</button>\n        </div>\n      </form>\n\n      <h2>Numbers</h2>\n      { \n        filteredPersons.map(person => \n        <Person \n          key={person.name} \n          person={person} \n          handleRemove={() => handleRemoveOf(person.id)}/>)\n      }\n    </>\n  )\n\n}\n\nconst Person = ({person, handleRemove}) => {\n  return(      \n    <div>{person.name} {person.number} <button onClick={handleRemove}>Delete</button></div>                 \n  )\n}\n\n\nconst Filter = ({filter, onChange}) => {\n  return (\n    <div>filter shown with <input value={filter} onChange={onChange} /></div>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App notes />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}